/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphic;

import java.awt.Graphics;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;
import logic.Controller;
import logic.Game;
import logic.ModelListener;


/**
 * Class is used to handle the visible playfield for both the game against the computer as also the one over network
 * @author Marc
 */
public class PlayfieldGraphics extends JFrame
{
// <editor-fold defaultstate="collapsed" desc="Attributes">
    //Is used for logical game functions
    Controller gamecontrol;
    
    //A field of GameStone components, is used to access
    //the generated playstones after dynamic creaton
    GameStone[][] graphicField;

    public GameStone[][] getGraphicField()
    {
        return graphicField;
    }

    public JPanel getPlayArea()
    {
        return playArea;
    }
    
   
    
    //More detailed MouseListener for the GameStone-Events
    GameStoneListener stoneListener;
// </editor-fold>
    /**
     * Creates new form PlayfieldGraphics
     *
     * @param gameControl is used to handle the game states
     */
    public PlayfieldGraphics(Controller gameControl)
    {

        initComponents();
        this.gamecontrol = gameControl;
        graphicField = new GameStone[7][6];
        stoneListener = new GameStoneListener(gamecontrol);

        GridLayout grid = new GridLayout(6, 7, 10, 10);

        playArea.setLayout(grid);
        for (int i = 5; i >= 0; i--)
        {
            for (int j = 0; j < 7; j++)
            {
                graphicField[j][i] = new GameStone(j, stoneListener);
                playArea.add(graphicField[j][i]);
            }

        }

    }

    @Override
    public void paint(Graphics g)
    {
        super.paintComponents(g);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        playArea = new javax.swing.JPanel();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        menuNewGame = new javax.swing.JMenuItem();
        menuSaveGame = new javax.swing.JMenuItem();
        menuLoadGame = new javax.swing.JMenuItem();
        NetworkMenu = new javax.swing.JMenu();
        menuHostGame = new javax.swing.JMenuItem();
        menuJoinGame = new javax.swing.JMenuItem();

        jMenu2.setText("File");
        jMenuBar2.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout playAreaLayout = new javax.swing.GroupLayout(playArea);
        playArea.setLayout(playAreaLayout);
        playAreaLayout.setHorizontalGroup(
            playAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        playAreaLayout.setVerticalGroup(
            playAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        FileMenu.setText("File");

        menuNewGame.setText("New Game");
        menuNewGame.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuNewGameActionPerformed(evt);
            }
        });
        FileMenu.add(menuNewGame);

        menuSaveGame.setText("Save Game");
        menuSaveGame.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuSaveGameActionPerformed(evt);
            }
        });
        FileMenu.add(menuSaveGame);

        menuLoadGame.setText("Load Game");
        menuLoadGame.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuLoadGameActionPerformed(evt);
            }
        });
        FileMenu.add(menuLoadGame);

        MenuBar.add(FileMenu);

        NetworkMenu.setText("Network");

        menuHostGame.setText("Host Game");
        NetworkMenu.add(menuHostGame);

        menuJoinGame.setText("Join Game");
        menuJoinGame.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                menuJoinGameActionPerformed(evt);
            }
        });
        NetworkMenu.add(menuJoinGame);

        MenuBar.add(NetworkMenu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles the filemenu activations and calls the corresponding actions
     *
     * @param evt String which is the selected menu point
     */
    private void menuNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewGameActionPerformed
        
                resetPlayfield();
         
    }//GEN-LAST:event_menuNewGameActionPerformed

    /**
     * Is used to handle the network settings
     * @param evt String which contains what element was clicked
     */
    private void menuJoinGameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuJoinGameActionPerformed
    {//GEN-HEADEREND:event_menuJoinGameActionPerformed
        switch(evt.getActionCommand()){
            case "Host Game":
                
                break;
            case "Join Game":
                break;
                
            default:
                
        }
    }//GEN-LAST:event_menuJoinGameActionPerformed

    private void menuSaveGameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuSaveGameActionPerformed
    {//GEN-HEADEREND:event_menuSaveGameActionPerformed
        gamecontrol.saveGame();
    }//GEN-LAST:event_menuSaveGameActionPerformed

    private void menuLoadGameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuLoadGameActionPerformed
    {//GEN-HEADEREND:event_menuLoadGameActionPerformed
        //Game game = gamecontrol.loadGame();
        //PlayfieldGraphics game = new PlayfieldGraphics(gamecontrol);
        ArrayList<ModelListener> oldListener = gamecontrol.getGame().getField().getListener();
        gamecontrol.loadGame();
        gamecontrol.getGame().getField().setListener(oldListener);
        //View graphic = new View(gamecontrol.getGame().getField(), this);
        //gamecontrol.loadGame();
                //loadPlayfield();
    }//GEN-LAST:event_menuLoadGameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenu NetworkMenu;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem menuHostGame;
    private javax.swing.JMenuItem menuJoinGame;
    private javax.swing.JMenuItem menuLoadGame;
    private javax.swing.JMenuItem menuNewGame;
    private javax.swing.JMenuItem menuSaveGame;
    private javax.swing.JPanel playArea;
    // End of variables declaration//GEN-END:variables

    private void resetPlayfield()
    {
       
        gamecontrol.resetPlayfield();
        

    }

    private void loadPlayfield()
    {
        gamecontrol.loadGame();
        
    }

}
